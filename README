- **mail2usenet**  
  A lightweight gateway project to post messages on Usenet via email or a simple web interface. This gateway implements a **Hashcash-based proof-of-work** system to discourage spam and abuse, requiring a valid *Proof-of-Work Date (UTC)* stamp in every post. It can also operate through a Tor `.onion` address to maintain user privacy and anonymity.  

  **Features:**  
  • Posts to Usenet via `IHAVE` or `POST`  
  • Hashcash **proof-of-work** for anti-spam  
  • Tor SOCKS5 proxy support (`.onion` address)  
  • Optional anti-abuse measures (crosspost limit, ±10-minute token validity)  
  • Secure HTTP/2 deployment with TLS v1.2/v1.3  

  **Requirements:**  
  • Python 3 with `venv` (tested on Debian/Ubuntu)  
  • Apache2 with SSL and PHP (either `mod_php` or PHP-FPM)  
  • Tor (optional, if you need `.onion` support)  
  • A NNTP server (e.g., INN in transit mode) to feed articles to Usenet  

  **Installation:**  
  1. Install system packages on Debian/Ubuntu:  
     ```bash
     sudo apt update
     sudo apt install python3 python3-venv apache2 libapache2-mod-php php
     ```  
  2. Create a Python virtual environment:  
     ```bash
     python3 -m venv /home/m2usenet/venv
     source /home/m2usenet/venv/bin/activate
     pip install --upgrade pip
     pip install pysocks stem
     ```  
     Place your Python script `m2usenet.py` in `/home/m2usenet/` and make it executable (`chmod +x m2usenet.py`).  
  3. Set up Apache2 with SSL:  
     ```bash
     sudo a2enmod ssl headers rewrite
     sudo systemctl restart apache2
     ```  
     (Adjust as needed to enable PHP.)  
  4. Deploy the web interface:  
     - Clone or copy `index.php` (and any related assets) into `/var/www/mail2usenet`  
     - Ensure correct permissions for Apache to serve these files  
  5. Configure VirtualHost with SSL (example):  
     ```apache
     <VirtualHost *:443>
         ServerName m2usenet.tld
         DocumentRoot /var/www/mail2usenet
         SSLEngine on
         SSLProtocol -all +TLSv1.2 +TLSv1.3
         SSLCipherSuite    TLSv1.3   TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384
         SSLCipherSuite    SSL       ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384
         SSLCertificateFile /etc/letsencrypt/live/m2usenet.tld/fullchain.pem
         SSLCertificateKeyFile /etc/letsencrypt/live/m2usenet.tld/privkey.pem
         SSLOpenSSLConfCmd Curves X25519:secp521r1:secp384r1:prime256v1
         Protocols h2 http/1.1
         LogLevel warn
         ErrorLog ${APACHE_LOG_DIR}/m2usenet_error.log
         CustomLog ${APACHE_LOG_DIR}/m2usenet_access.log anonymized_log

         # Security Headers
         Header always set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
         Header always set X-Content-Type-Options "nosniff"
         Header always set X-Frame-Options "DENY"
         Header always set X-XSS-Protection "1; mode=block"

         <Directory /var/www/mail2usenet/>
             Options Indexes FollowSymLinks
             DirectoryIndex index.php
             AllowOverride none
             Require all granted
         </Directory>
     </VirtualHost>
     ```
     Then enable and reload:  
     ```bash
     sudo a2ensite m2usenet.conf
     sudo systemctl reload apache2
     ```

  **Usage:**  
  • **Proof-of-Work Date**: Each post must include a *UTC timestamp* in `YYYYMMDDHHMM` format. The script generates and verifies a Hashcash token, raising the cost for spammers.  
  • **Onion Address (optional)**: Run Tor locally to post via a `.onion` address for better privacy.  
  • **Web or email gateway**: You can configure Postfix (or another MTA) to pipe mail into `m2usenet.py`, or simply use the provided `index.php` form to accept user submissions.  

  **Contributing:**  
  Feel free to open issues or submit pull requests if you discover bugs or wish to propose new features (especially around anti-spam or proof-of-work improvements).  

  **License:**  
  Choose an open-source license (e.g. MIT) if appropriate. Include a full `LICENSE` file in your repository.


